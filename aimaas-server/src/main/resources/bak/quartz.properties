#=====================================================================
# Configure Main Scheduler Properties 主要属性配置
# 集群需要配置threadsInheritContextClassLoaderOfInitializingThread，jobStore.class，isClustered，clusterCheckinInterval
#=====================================================================
#任务调度程序名称
org.quartz.scheduler.instanceName = TaskServiceScheduler
org.quartz.scheduler.instanceId = badouFrameWork
#让quartz跳过更新版本检查
org.quartz.scheduler.skipUpdateCheck = true
#=====================================================================
# Configure ThreadPool 线程池配置
#=====================================================================
org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
#job超时设置(每个任务最长活动时间)
org.quartz.jobStore.misfireThreshold = 1800000
#quartz线程池大小配置
org.quartz.threadPool.threadCount = 300
#自创建父线程（集群必须）
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread: true
#=====================================================================
# 持久化的数据源配置,JobStoreTX使用，RAMJobStore可无视
#=====================================================================
#JDBC驱动类,路径，登陆用户名及密码
quartz.jdbc.driverClassName=com.mysql.jdbc.Driver
quartz.jdbc.url=jdbc:mysql://1234:3306/1234?characterEncoding=UTF-8
quartz.jdbc.username=1234
quartz.jdbc.password=1234
##proxool池属性
##别名
quartz.jdbc.proxool.alias = db_sderp
#proxool自动侦察各个连接状态的时间间隔(毫秒),侦察到空闲的连接就马上回收,超时的销毁 默认30秒）
quartz.jdbc.proxool.houseKeepingSleepTime=30000 
#连接超时测试语句
quartz.jdbc.proxool.houseKeepingTestSql=select NOW()
#如果housekeeper检测到某个线程的活动时间大于这个数值.它将会杀掉这个线程,默认为5分钟,单位毫秒
quartz.jdbc.proxool.maximumActiveTime = 900000
#连接的最大生命周期,单位毫秒
quartz.jdbc.proxool.maximumConnectionLifetime = 180000
#最少保持的空闲连接数
quartz.jdbc.proxool.prototypeCount = 10
#最大连接数
quartz.jdbc.proxool.maximumConnectionCount=10
#最小连接数
quartz.jdbc.proxool.minimumConnectionCount=5
#默认值是10
quartz.jdbc.proxool.simultaneousBuildThrottle = 10
#连接池使用状况统计。 参数“10s,1m,1d”
quartz.jdbc.proxool.statistics = 1m
#日志统计跟踪类型。 参数“ERROR”或 “INFO”
quartz.jdbc.proxool.statisticsLogLevel = ERROR
#是否调用日志logged.DEBUG打印SQL执行时间
quartz.jdbc.proxool.trace=true
#是否详细输出
quartz.jdbc.proxool.verbose=false
#=====================================================================
# jobStore 任务存储配置
# 以下二选一
#=====================================================================
org.quartz.jobStore.misfireThreshold = 60000
#方式一（集群）:================================================
#将队列存储在数据库中,集群需要
org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
org.quartz.jobStore.tablePrefix = QRTZ_
org.quartz.jobStore.maxMisfiresToHandleAtATime=10
#定义了Scheduler 实例检入到数据库中的频率，clusterChedkinInterval 越小，Scheduler 节点检查失败的 Scheduler 实例就越频繁。默认值是 15000 (即15 秒)。
org.quartz.jobStore.clusterCheckinInterval = 2000
#属性为 true，你就告诉了 Scheduler 实例要它参与到一个集群当中。这一属性会贯穿于调度框架的始终，用于修改集群环境中操作的默认行为。
org.quartz.jobStore.isClustered = true
#方式二：======================================================
#将队列存储在内存中
#org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore


